{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from '@mo-shop/users';\nimport { CartService } from '../../services/cart.service';\nimport { OrdersService } from '../../services/orders.service';\nimport { Subject, takeUntil } from 'rxjs';\nimport { StripeService } from 'ngx-stripe';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@mo-shop/users\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../services/cart.service\";\nimport * as i5 from \"../../services/orders.service\";\nimport * as i6 from \"ngx-stripe\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/inputtext\";\nimport * as i10 from \"primeng/dropdown\";\nimport * as i11 from \"primeng/inputmask\";\nimport * as i12 from \"../../components/order-summary/order-summary.component\";\n\nfunction CheckoutPageComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_16_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtemplate(1, CheckoutPageComponent_small_16_span_1_Template, 2, 0, \"span\", 26);\n    i0.ɵɵtemplate(2, CheckoutPageComponent_small_16_span_2_Template, 2, 0, \"span\", 26);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkoutForm[\"email\"].errors == null ? null : ctx_r1.checkoutForm[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkoutForm[\"email\"].errors == null ? null : ctx_r1.checkoutForm[\"email\"].errors[\"email\"]);\n  }\n}\n\nfunction CheckoutPageComponent_small_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"phone is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Street is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Apartment is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Zip is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"City is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckoutPageComponent_small_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 25);\n    i0.ɵɵtext(1, \"Country is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CheckoutPageComponent = /*#__PURE__*/(() => {\n  class CheckoutPageComponent {\n    constructor(router, usersService, formBuilder, cartService, ordersService, stripeService) {\n      this.router = router;\n      this.usersService = usersService;\n      this.formBuilder = formBuilder;\n      this.cartService = cartService;\n      this.ordersService = ordersService;\n      this.stripeService = stripeService;\n      this.isSubmitted = false;\n      this.countries = [];\n      this.unsubscribe$ = new Subject();\n    }\n\n    ngOnInit() {\n      this._initCheckoutForm();\n\n      this._getCartItems();\n\n      this._getCountries();\n\n      this.autoFillUserData();\n    }\n\n    ngOnDestroy() {\n      this.unsubscribe$.next(1);\n      this.unsubscribe$.complete();\n    }\n\n    _initCheckoutForm() {\n      this.checkoutFormGroup = this.formBuilder.group({\n        name: ['', Validators.required],\n        email: ['', [Validators.email, Validators.required]],\n        phone: ['', Validators.required],\n        city: ['', Validators.required],\n        country: ['', Validators.required],\n        zip: ['', Validators.required],\n        apartment: ['', Validators.required],\n        street: ['', Validators.required]\n      });\n    }\n\n    _getCartItems() {\n      const cart = this.cartService.getCart();\n      this.orderItems = cart?.items?.map(item => {\n        return {\n          product: item.productId,\n          quantity: item.quantity\n        };\n      });\n    }\n\n    autoFillUserData() {\n      this.usersService.observeCurrentUser().pipe(takeUntil(this.unsubscribe$)).subscribe(user => {\n        if (user) {\n          this.userId = user.id;\n          this.checkoutFormGroup.controls['name'].setValue(user.name);\n          this.checkoutFormGroup.controls['email'].setValue(user.email);\n          this.checkoutFormGroup.controls['phone'].setValue(user.phone);\n          this.checkoutFormGroup.controls['city'].setValue(user.city);\n          this.checkoutFormGroup.controls['country'].setValue(user.country);\n          this.checkoutFormGroup.controls['zip'].setValue(user.zip);\n          this.checkoutFormGroup.controls['apartment'].setValue(user.apartment);\n          this.checkoutFormGroup.controls['street'].setValue(user.street);\n        }\n      });\n    }\n\n    _getCountries() {\n      this.countries = this.usersService.getCountries();\n    }\n\n    backToCart() {\n      this.router.navigate(['/cart']);\n    }\n\n    placeOrder() {\n      this.isSubmitted = true;\n\n      if (this.checkoutFormGroup.invalid) {\n        return;\n      }\n\n      const order = {\n        orderItems: this.orderItems,\n        shippingAddress1: this.checkoutFormGroup.controls['street'].value,\n        shippingAddress2: this.checkoutFormGroup.controls['apartment'].value,\n        city: this.checkoutFormGroup.controls['city'].value,\n        zip: this.checkoutFormGroup.controls['zip'].value,\n        country: this.checkoutFormGroup.controls['country'].value,\n        phone: this.checkoutFormGroup.controls['phone'].value,\n        status: 0,\n        user: this.userId,\n        dateOrdered: `${Date.now()}`\n      };\n      this.ordersService.cacheOrderData(order);\n      this.ordersService.createCheckoutSession(this.orderItems).subscribe(error => {\n        if (error) {\n          console.log('error', error);\n        }\n      });\n    }\n\n    get checkoutForm() {\n      return this.checkoutFormGroup.controls;\n    }\n\n  }\n\n  CheckoutPageComponent.ɵfac = function CheckoutPageComponent_Factory(t) {\n    return new (t || CheckoutPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.CartService), i0.ɵɵdirectiveInject(i5.OrdersService), i0.ɵɵdirectiveInject(i6.StripeService));\n  };\n\n  CheckoutPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckoutPageComponent,\n    selectors: [[\"orders-checkout-page\"]],\n    decls: 54,\n    vars: 12,\n    consts: [[1, \"checkout-page\"], [\"label\", \"Back to cart\", \"icon\", \"pi pi-arrow-left\", 3, \"onClick\"], [1, \"grid\", \"checkout-form\"], [1, \"col-8\"], [3, \"formGroup\"], [1, \"p-fluid\", \"mb-3\", \"p-formgrid\", \"grid\"], [1, \"p-field\", \"col-4\"], [\"for\", \"name\"], [\"formControlName\", \"name\", \"id\", \"name\", \"type\", \"text\", \"pInputText\", \"\"], [\"class\", \"p-error\", 4, \"ngIf\"], [\"for\", \"email\"], [\"formControlName\", \"email\", \"id\", \"email\", \"type\", \"text\", \"pInputText\", \"\"], [\"for\", \"color\"], [\"mask\", \"(999) 999-9999\", \"formControlName\", \"phone\", \"placeholder\", \"(999) 999-9999\"], [\"for\", \"street\"], [\"formControlName\", \"street\", \"id\", \"street\", \"type\", \"text\", \"pInputText\", \"\"], [\"formControlName\", \"apartment\", \"id\", \"apartment\", \"type\", \"text\", \"pInputText\", \"\"], [\"formControlName\", \"zip\", \"id\", \"zip\", \"type\", \"text\", \"pInputText\", \"\"], [\"for\", \"city\"], [\"formControlName\", \"city\", \"id\", \"city\", \"type\", \"text\", \"pInputText\", \"\"], [\"for\", \"country\"], [\"formControlName\", \"country\", \"optionLabel\", \"name\", \"optionValue\", \"id\", \"filterBy\", \"name\", \"placeholder\", \"Select a Country\", 3, \"options\", \"filter\", \"showClear\"], [1, \"col-4\"], [1, \"checkout-button\"], [\"label\", \"Place-Order\", 3, \"onClick\"], [1, \"p-error\"], [4, \"ngIf\"]],\n    template: function CheckoutPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"p-button\", 1);\n        i0.ɵɵlistener(\"onClick\", function CheckoutPageComponent_Template_p_button_onClick_2_listener() {\n          return ctx.backToCart();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, CheckoutPageComponent_small_11_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵtemplate(16, CheckoutPageComponent_small_16_Template, 3, 2, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 12);\n        i0.ɵɵtext(19, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"br\")(21, \"p-inputMask\", 13);\n        i0.ɵɵtemplate(22, CheckoutPageComponent_small_22_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"div\", 5)(24, \"div\", 6)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Street\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵtemplate(28, CheckoutPageComponent_small_28_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 6)(30, \"label\", 14);\n        i0.ɵɵtext(31, \"Apartment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 16);\n        i0.ɵɵtemplate(33, CheckoutPageComponent_small_33_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6)(35, \"label\", 14);\n        i0.ɵɵtext(36, \"Zip Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 17);\n        i0.ɵɵtemplate(38, CheckoutPageComponent_small_38_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 6)(40, \"label\", 18);\n        i0.ɵɵtext(41, \"City\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 19);\n        i0.ɵɵtemplate(43, CheckoutPageComponent_small_43_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 6)(45, \"label\", 20);\n        i0.ɵɵtext(46, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"br\")(48, \"p-dropdown\", 21);\n        i0.ɵɵtemplate(49, CheckoutPageComponent_small_49_Template, 2, 0, \"small\", 9);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(50, \"div\", 22);\n        i0.ɵɵelement(51, \"orders-order-summary\");\n        i0.ɵɵelementStart(52, \"div\", 23)(53, \"p-button\", 24);\n        i0.ɵɵlistener(\"onClick\", function CheckoutPageComponent_Template_p_button_onClick_53_listener() {\n          return ctx.placeOrder();\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.checkoutFormGroup);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"name\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"email\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"phone\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"street\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"apartment\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"zip\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"city\"].invalid && ctx.isSubmitted);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"options\", ctx.countries)(\"filter\", true)(\"showClear\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkoutForm[\"country\"].invalid && ctx.isSubmitted);\n      }\n    },\n    dependencies: [i7.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i8.Button, i9.InputText, i10.Dropdown, i11.InputMask, i12.OrderSummaryComponent],\n    encapsulation: 2\n  });\n  return CheckoutPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN = 'jwtToken';\nexport let LocalstorageService = /*#__PURE__*/(() => {\n  class LocalstorageService {\n    constructor() {}\n\n    setToken(data) {\n      localStorage.setItem(TOKEN, data);\n    }\n\n    getToken() {\n      return localStorage.getItem(TOKEN);\n    }\n\n    removeToken() {\n      localStorage.removeItem(TOKEN);\n    }\n\n    isValidToken() {\n      const token = this.getToken();\n\n      if (token) {\n        const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n        return !this._tokenExpired(tokenDecode.exp);\n      } else {\n        return false;\n      }\n    }\n\n    getUserIdFromToken() {\n      const token = this.getToken();\n\n      if (token) {\n        const tokenDecode = JSON.parse(atob(token.split('.')[1]));\n\n        if (tokenDecode) {\n          console.log(tokenDecode.userId);\n          return tokenDecode.userId;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    _tokenExpired(expiration) {\n      return Math.floor(new Date().getTime() / 1000) >= expiration;\n    }\n\n  }\n\n  LocalstorageService.ɵfac = function LocalstorageService_Factory(t) {\n    return new (t || LocalstorageService)();\n  };\n\n  LocalstorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalstorageService,\n    factory: LocalstorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalstorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}